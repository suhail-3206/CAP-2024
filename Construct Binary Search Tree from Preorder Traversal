/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
     int counter=0;
    public TreeNode bstFromPreorder(int[] preorder) {
         return construct(preorder, Integer.MAX_VALUE);
}

private TreeNode construct(int[] preorder, int bound){
    
   
    if(counter == preorder.length || preorder[counter] > bound)
        return null;
    TreeNode node = new TreeNode(preorder[counter++]);
    node.left = construct(preorder, node.val);
    node.right = construct(preorder, bound);
    return node;

}
}
