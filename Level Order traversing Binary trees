import java.util.*;
import java.lang.*;
public class Main
{
    //THE NODE OF THE TREE CONSISTES OF DATA, LEFT AND RIGHT
    static class Node{
        int data;
        Node left;
        Node right;
        
        Node(int data){
            this.data=data;
            this.left=null;
            this.right=null;
        }
        
    }
    public static void levelorder(Node root){
        Queue<Node> q= new LinkedList<>();
        if(root==null){
            return ;
        }
        q.add(root);
        q.add(null);
        while(!q.isEmpty()){
            Node curnode=q.remove();
            if(curnode==null){
                System.out.println();
                if(q.isEmpty()){
                    break;
                }
                else{
                    q.add(null);
                }
            }else{
                System.out.print(curnode.data+" ");
                if(curnode.left!=null){
                    q.add(curnode.left);
                }
                if(curnode.right!=null){
                    q.add(curnode.right);
                }
            }
        }
    }
   
       
    
    public static void main(String args[]){
        int nodes[] = {1, 2, 4, -1, -1, 5, -1, -1, 3, -1, 6, -1, -1};
        Binarytree bt =new Binarytree();
        Node root = bt.buildtree(nodes);
        System.out.println(count(root));
        System.out.println(sum(root));
        levelorder(root);
    }
}
