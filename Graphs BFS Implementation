import java.util.*;
public class Main
{
    static class Edge{
        int src;
        int dt;
        public Edge(int src,int dt){
            this.src=src;
            this.dt=dt;
        }
    }
    static void creategraph(ArrayList<Edge> graph[]){
        for(int i=0;i<graph.length;i++){
            graph[i]=new ArrayList<>();
        }
        graph[0].add(new Edge(0,1));
        graph[0].add(new Edge(0, 2));
        graph[1].add(new Edge(1, 0));
        graph[1].add(new Edge(1, 3));
        graph[2].add(new Edge(2, 0));
        graph[2].add(new Edge(2, 4));
        graph[3].add(new Edge(3, 1));
        graph[3].add(new Edge(3, 4));
        graph[3].add(new Edge(3, 5));
        graph[4].add(new Edge(4, 2));
        graph[4].add(new Edge(4, 3));
        graph[4].add(new Edge(4, 5));
        graph[5].add(new Edge(5, 3));
        graph[5].add(new Edge(5, 4));
        graph[5].add(new Edge(5, 6));
        graph[5].add(new Edge(6, 5));
    }
    public static void bfs(ArrayList<Edge> graph[],int V){
        boolean vis[]=new boolean[V];
        Queue<Integer> q=new LinkedList<>();
        q.add(0);
        while(!q.isEmpty()){
            int cur =q.remove();
            if(!vis[cur]){
                System.out.print(cur+" ");
                vis[cur]=true;
            }
            for(int i=0;i<graph[cur].size();i++){
                Edge e=graph[cur].get(i);
                q.add(e.dt);
            }
        }
    }
	public static void main(String[] args) {
	    int V=7;
		ArrayList<Edge> graph[]=new ArrayList[V];
		creategraph(graph);
		bfs(graph,V);
		
	}
}
