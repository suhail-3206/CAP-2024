Queue<pair> q=new ArrayDeque<>();
        Map<Integer,Integer> map=new TreeMap<>();
        q.add(new pair(0,root));
        while(!q.isEmpty()){
            pair cur=q.remove();
            if(!map.containsKey(cur.hd)){
                map.put(cur.hd,cur.node.data);
            }
            if(cur.node.left!=null){
                q.add(new pair(cur.hd-1,cur.node.left));
            }
            if(cur.node.right!=null){
                q.add(new pair(cur.hd+1,cur.node.right));
            }
        }
        ArrayList<Integer> mylis=new ArrayList<>();
        for(Map.Entry<Integer,Integer> entry : map.entrySet()){
            mylis.add(entry.getValue());
        }
        return mylis;
        
        
    }
    static class pair{
        int hd;
        Node node;
        public pair(int hd,Node node){
            this.hd=hd;
            this.node=node;
            
        }
        
    }
