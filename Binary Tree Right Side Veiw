/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> mylis=new ArrayList<>();
        Queue<TreeNode> q=new LinkedList<>();
        if(root==null){
            return mylis;
        }
        q.add(root);
        while(!q.isEmpty()){
            int c=q.size();
            for(int i=0;i<c;i++){
                TreeNode cur=q.remove();
                if(i==c-1){
                    mylis.add(cur.val);
                }
                if(cur.left!=null){
                    q.add(cur.left);
                }
                if(cur.right!=null){
                    q.add(cur.right);
                }
            }
        }
        return mylis;
        
        
    }
}
